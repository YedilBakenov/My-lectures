
Сериализация и десериализация — это процессы преобразования данных в формат, который может быть легко сохранен или передан,
и обратно в исходный формат или объект.

Сериализация
Сериализация — это процесс преобразования объекта или структуры данных в последовательность битов или в формат, 
который можно сохранить в файле или передать по сети. Это может быть, например, преобразование объекта Java 
в формат JSON или XML. Цель сериализации — сохранить состояние объекта таким образом, чтобы его можно было 
воссоздать в другом времени или месте, независимо от того, в какой среде выполняется приложение.

Пример: У вас есть объект пользователя в приложении, который содержит имя, возраст и электронную почту. 
Сериализация этого объекта в формат JSON может преобразовать его в строку вида:

{
  "name": "Иван Иванов",
  "age": 30,
  "email": "ivan@example.com"
}

Эта строка может быть затем сохранена в файл, отправлена через интернет или помещена в базу данных.


Десериализация
Десериализация — это обратный процесс, при котором сериализованные данные преобразуются обратно в объекты или структуры данных.
Это позволяет восстановить объекты из файла, базы данных или после передачи по сети.

Пример: При получении JSON-строки, упомянутой выше, десериализация преобразует ее обратно в объект пользователя в приложении,
восстанавливая его состояние с именем, возрастом и электронной почтой.

Зачем это нужно?
Сохранение состояния: Сериализация позволяет сохранить состояние объекта для последующего восстановления, 
что полезно для различных задач, таких как сохранение сессий, кэширование данных и сохранение настроек пользователя.

Передача данных: Сериализация обеспечивает удобный способ передачи данных между различными частями приложения, 
которые могут работать в разных средах или на разных языках программирования. Это особенно важно 
в распределенных системах, веб-сервисах и микросервисных архитектурах.

Интероперабельность: Сериализация данных в стандартные форматы, такие как JSON или XML, позволяет 
обмениваться данными между приложениями и системами, написанными на разных языках программирования, 
что способствует интеграции и взаимодействию между системами.

В целом, сериализация и десериализация играют ключевую роль в сохранении, передаче и восстановлении
состояния объектов в современных приложениях и системах.



