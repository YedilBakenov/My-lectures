Коллекции. Map.
Ассоциативный массив.

Интерфейс Map в Java представляет собой коллекцию, которая хранит данные в виде ключ-значение (key-value). Ключи в Map должны быть уникальными, а значения могут быть дубликатами.
Ключи используются для доступа к соответствующим значениям в Map.Ассоциативный массив - это структура данных, которая позволяет связать пары ключ-значение и 
быстро находить значение по ключу. Она представляет собой набор объектов, каждый из которых содержит пару "ключ-значение", причем каждый ключ уникален в наборе.  	
Данная коллекция представляет собой неупорядоченную коллекцию, которая позволяет хранить данные в виде пар ключ-значение.
Однако, порядок элементов в HashMap не гарантируется и может быть изменен при изменении размера таблицы.
Ключи не могут быть одинаковыми у разных объектов и нет индексов у элементов.


HashMap
[ключ, значение]
HashMap<String, String> names = new HashMap<>();


.put() - добавление элемента. название массива.put(ключ, значение)
 переписывает значение, если указываем один ключ
.get() - возвращает значение по ключу. название массива.put(ключ)
поиск значения идет по ключу
.remove() - удаляет значение по ключу. название массива.remove(ключ)
.clear() - удаляет все элементы в массиве
.keySet() - возвращает множество всех ключей в массиве
.values() - возвращает список всех значений
.names.putAll() - добавляет один меп в другой
.containsKey(key): Проверяет, содержит ли Map указанный ключ.
.containsValue(value): Проверяет, содержит ли Map указанное значение.

Можно вывести значения всех ключей через цикл for each. Пример:
HashMap<Integer, String> hashMap = new HashMap<>();

        hashMap.put(1, "Yedil");
        hashMap.put(2, "Kuat");
        hashMap.put(3, "Timur");

        for(int key: hashMap.keySet()){
            System.out.println(key);
        }



System.out.println(название массива.values()) - можно получить все значения

Sytem.out.println(название массива) - выводятся все данные


 	HashMap<Integer, String> names = new HashMap<>();

	names.put(1, "Yedil Bakenov");
	names.put(2, "Kuat Kuat");
	names.put(3, "Timur Gridnev");

	ArrayList<String> names2 = new ArrayList<>(names.values());
	HashSet<String> names3 = new HashSet<>(names.keySet());

	System.out.println(names2);
	System.out.println(names3);





