Queue(очередь): 
Он представляет собой коллекцию элементов, где добавление новых элементов происходит с одного конца (конец очереди), а удаление элементов происходит с другого конца (начало очереди).
Такая структура данных работает по принципу "первым пришёл — первым ушёл" (FIFO - First-In-First-Out).
Это означает, что элементы из списка извлекаются в порядке, в котором они были добавлены.
Добавление новых элементов происходит с одного конца, который обычно называется "конец очереди", 
а удаление элементов происходит с другого конца, который называется "начало очереди".
В Java есть два основных класса, реализующих интерфейс Queue: LinkedList и PriorityQueue а также ArrayDeque. 
LinkedList представляет собой двунаправленный связанный список,
PriorityQueue использует очередь с приоритетами для хранения элементов.
основное отличие между LinkedList и PriorityQueue заключается в том, что LinkedList поддерживает добавление и удаление элементов в порядке FIFO (первым пришел, первым вышел), а PriorityQueue - в порядке приоритета.


Давайте представим себе очередь в виде линии людей, ожидающих вход в кинотеатр.
Люди добавляются в конец очереди по мере их прихода, и удаляются из начала очереди, когда они проходят через вход.
То же самое происходит и с элементами в очереди.
Важно помнить, что в очереди элементы сохраняются в определенном порядке, и новые элементы добавляются в конец, а удаление происходит с начала. 
Это обеспечивает соблюдение порядка, в котором элементы были добавлены в очередь, и поддерживает принцип "первым пришел - первым ушел".

методы:
add()  для добавления элемента в конец очереди

remove() для удаления элемента из начала очереди

peek() для просмотра элемента, находящегося в начале очереди без удаления его

poll() для извлечения и удаления элемента из начала очереди.

Классы, реализующие интерфейс Queue, включают в себя:

LinkedList: Класс LinkedList реализует интерфейс Queue в Java. 
Он представляет собой связанный список и обеспечивает эффективную вставку и удаление элементов как в начало, так и в конец очереди. 
LinkedList также поддерживает другие методы для работы с коллекцией, такие как добавление в середину, доступ к элементам по индексу и т.д.

PriorityQueue: Класс PriorityQueue в Java представляет собой реализацию очереди с приоритетом.
Он позволяет добавлять элементы с определенным приоритетом и извлекать их в порядке убывания приоритета.

Класс ArrayDeque в Java представляет собой реализацию двусторонней очереди (дека) на основе динамического массива. 
Он позволяет добавлять и удалять элементы как с начала, так и с конца очереди. 



