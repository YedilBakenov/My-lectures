GIT - система контроля версий
GitHub отличия от GITLABA
GitHub - это платформа для хостинга и совместной работы над проектами с использованием системы контроля версий Git.


Он предоставляет возможность разработчикам хранить, управлять и совместно работать над своим кодом.

Одним из главных отличий GitLab является возможность самостоятельного развертывания на собственных серверах.
Это позволяет организациям иметь полный контроль над инфраструктурой и данными, что может быть важным с точки зрения безопасности и конфиденциальности.

Зачем нужен GitHub:

Хранение кода: GitHub позволяет сохранять и управлять вашим кодом в удаленном репозитории.
Это обеспечивает резервное копирование вашего кода и упрощает совместную работу с другими разработчиками.

Совместная разработка: GitHub облегчает совместную работу над проектами. 
Разработчики могут форкать (создавать копию) репозитории других проектов, вносить изменения и предлагать их для включения в основной проект через механизм Pull 

1. Регистрация на https://github.com/
2. Создаем новый проект  в idea, новый класс
3. Создаем репозиторий на ГитХабе - публичный
4. Скачиваем и устанавливаем программу для работы с ГИТ https://git-scm.com/
5. GIT-> Manager Remotes -> +->  Копируем ссылку из гитхаба и вставляем ее в j
5. VCS -> ENABLED -> GIT . Класс стал красным - потому что не закомичен. Коммит - когда подтвержаешь свой код. GIT -> commit
выбираем все кроме гитИгнор. Прописываем Коммит.
https://github.com/Homebrew/brew/releases/tag/4.1.22 - на маке установка vcs
7. Ввести первый раз логин и пароль
8. GIT PUSH
9. Добавляем изменения в класс, commit push
10. Копировать ссылку, когда отправляете свой код



GIT - это распределенная система управления версиями. Основная задача помогать создавать раличные версии приложения.
1. Позволяет сохранять различные версии проектов
2. Быстрый переход между различными версиями проекта
3. Откат к предыдущим версиям проекта при необходимости
4. Улучшает процесс командной работы над одними и теми же проектами
5. Независимая одновременная разработка новых функций в проекте(разрабатывать в разных ветках)
Резюмируя - значительно улучшает командную работу над проектами.

Git - распределенная версия контроля версий. Устанавливается на компьютер либо на люой сервер.
GitHub - сервис хостинга Git репозиториев. Можно с помощью Git создать локально на своем компбютере репозиторий.
Хостинг необходим для командной работы. Разработчики со своих локальных репозиториев взаимодействуют с одним удаленным GIT репозиторием.
Основная версия хранится на сервере.

Запуск на своем компьютере:
Основные команды:
1. Открываем PowerShell на виндовсе на маке iterm2 либо терминал, лучше GitBash
2. Настройка Имени и Email
3. Можно связать локальный и на ГитХабе свои аккаунты для этого нужно указать тот же емаил на локальном
4. Задаем Имя и Емаил: git config --global user.name "Yedil Bakenov"
                       git config --global user.email yedil.bakenov.gmail.com
5. Просмотреть конфигурацию git config --list
6. Очистка терминала clear + enter
7. shift + ins - вставить выбранный текс в гитбаш
8. на гитхабе new ssh key-> вставляем ключ
9. создание репозиторий new repository-> в качестве названия вести тоже название что и проект
10. загрузка проекта на гитхаб: cd "где находится наш проект"
git init
git remote add origin "https://github.com/YedilBakenov/demoProject"
git add . - добаляем все файлы из папки в репозиторий
git commit -m "first commit" коммитим все файлы
git branch -M main настраиваем работу с веткой
git push -u origin main
11. клонирование репозитория (скачивание проекта с гитхаба)
копируем адрес проекта на гихаб <>Code -> ssh 
cd .. - git clone "адрес ssh"
12. 



Основные команды:
)Просмотр где мы находимся: pwd
)Переход в папку: через cd, например cd ~\Desktop
)mkdir my-project: создание папки my-project
)Переход в папку: cd + tab можно выбирать автоматически в какую папку перейти
)Создание файла с текстом: echo "Some text" > file.txt
)Cписок файлов в папке: ls
)Чтение файла: cat file.txt show
)Удаление файла: rm file.txt
)cd .. : выход в папку на уровень ниже


Работа с GIT:

Задаем Имя и Емаил: git config --global user.name "Yedil Bakenov"
                    git config --global user.email yedil.bakenov.gmail.com

		    создание папки
						
                    git init	
		    git remote add origin "https://github.com/YedilBakenov/demoProject"


                      


1. SSH ключи профиль на гитхабе settings -> ssh and GPG keys->  generating SSH keys ->
Подключение по SSH -> Создание нового ключа SSH -> копируем ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
2. вставляем эту команду в терминал - git указываем свой емаил - ключи сгенерировались
3. везде нажимаем enter
4. открываем ключ  с помощью команды cat /c/Users/yedil/.ssh/id_ed25519.pub
5  копируем ключ 
6. вставляем ключ в github в настройках
  
1. git init - создание репозитория. он будет скрытым
2. ls -force - отображение скрытых файлов
3. cd .git  переход в скрытую папку
4. git status - показывает файлы которые подготовлены для commita(сохранения в репозиторий)
5.  




